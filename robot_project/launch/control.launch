<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robot_project)/urdf/robot.xacro'"/>

    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0.5"/>

    <node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -param robot_description -model my_robot -x $(arg x) -y $(arg y) -z $(arg z)" />

    <rosparam file="$(find robot_project)/config/my_diff_drive.yaml" command="load" />

    <node name="manager" pkg="controller_manager" type="spawner"
          respawn="false" output="screen" args="mobile_base_controller joint_chassis_left_back_wheel joint_chassis_right_back_wheel " />

    <!-- Add models to world -->
    <env name="GAZEBO_MODEL_PATH" value="$(find robot_project)/models"/>

    <!-- Run the map server -->
    <arg name="map_file" default="$(find robot_project)/maps/flat.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <!--- Run AMCL -->
    <include file="$(find robot_project)/launch/amcl.launch" />

    <!--- Run flat world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find robot_project)/world/flat.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <!-- send fake joint values -->
    <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />

    <!-- Combine joint values -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    <!-- Show in Rviz   -->
    <node name="rviz" pkg="rviz" type="rviz" />
    <arg name="no_static_map" default="false"/>
    <arg name="base_global_planner" default="navfn/NavfnROS"/>
<!--    <arg name="base_global_planner" default="carrot_planner/CarrotPlanner"/>-->
<!--    <arg name="base_global_planner" default="global_planner/GlobalPlanner"/>-->

    <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
<!--    <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/>-->
<!--    <arg name="base_local_planner" default="eband_local_planner/EBandPlannerROS"/>-->
<!--    <arg name="base_local_planner" default="teb_local_planner/TebLocalPlannerROS"/>-->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
<!--        <remap from="cmd_vel" to="/mobile_base_controller/cmd_vel"/>-->
<!--        <remap from="odom" to="/mobile_base_controller/odom" />-->

        <param name="base_global_planner" value="$(arg base_global_planner)"/>
        <param name="base_local_planner" value="$(arg base_local_planner)"/>
        <rosparam file="$(find robot_project)/config/planner.yaml" command="load"/>

        <!-- observation sources located in costmap_common.yaml -->
        <rosparam file="$(find robot_project)/config/costmap_common.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find robot_project)/config/costmap_common.yaml" command="load" ns="local_costmap" />

        <!-- local costmap, needs size -->
        <rosparam file="$(find robot_project)/config/costmap_local.yaml" command="load" ns="local_costmap" />
        <param name="local_costmap/width" value="10.0"/>
        <param name="local_costmap/height" value="10.0"/>

        <!-- static global costmap, static map provides size -->
        <rosparam file="$(find robot_project)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>

        <!-- global costmap with laser, for odom_navigation_demo -->
        <rosparam file="$(find robot_project)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
        <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
        <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>
    </node>
</launch>